#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

#@ if data.values.domain:
#@   data.values.domain!="REPLACE_ME" or assert.fail("data.values.domain can not be empty or REPLACE_ME")
#@ else:
#@   assert.fail("data.values.domain can not be empty or REPLACE_ME")
#@ end

#! Assert provider
#@ data.values.provider=="aws" or data.values.provider=="bind" or data.values.provider=="azure" or assert.fail("values.provider accepted values are: aws, bind, azure")

#@ data.values.target.service==True or data.values.target.service==False or assert.fail("values.target.service accepted values are: True, False")
#@ data.values.target.ingress==True or data.values.target.ingress==False or assert.fail("values.target.ingress accepted values are: True, False")
#@ data.values.target.contour==True or data.values.target.contour==False or assert.fail("values.target.contour accepted values are: True, False")


#@ if data.values.provider=="aws":
  #@ if data.values.aws.zone_type:
  #@ data.values.aws.zone_type=="public" or data.values.aws.zone_type=="private" or assert.fail("values.aws.zone_type accepted values are: public, private, (empty)")
  #@ end

  #@ if data.values.aws.policy:
  #@ data.values.aws.policy=="upsert-only" or assert.fail("values.aws.policy accepted values are: upsert-only, (empty)")
  #@ end

  #@ data.values.aws.txt_owner or assert.fail("values.aws.txt_owner can not be empty")

  #@ if data.values.aws.access_key_id:
  #@   data.values.aws.access_key_id!="REPLACE_ME" or assert.fail("data.values.aws.access_key_id can not be empty or REPLACE_ME")
  #@ else:
  #@   assert.fail("data.values.aws.access_key_id can not be empty or REPLACE_ME")
  #@ end
  #@ if data.values.aws.secret_access_key:
  #@   data.values.aws.secret_access_key!="REPLACE_ME" or assert.fail("data.values.aws.secret_access_key can not be empty or REPLACE_ME")
  #@ else:
  #@   assert.fail("data.values.aws.secret_access_key can not be empty or REPLACE_ME")
  #@ end
#@ end

#@ if data.values.provider=="bind":
  #@ data.values.bind.txt_owner or assert.fail("values.bind.txt_owner can not be empty")

  #@ if data.values.bind.host:
  #@   data.values.bind.host!="REPLACE_ME" or assert.fail("data.values.bind.host can not be empty or REPLACE_ME")
  #@ else:
  #@   assert.fail("data.values.bind.host can not be empty or REPLACE_ME")
  #@ end

  #@ data.values.bind.txt_owner or assert.fail("values.bind.txt_owner can not be empty")

  #@ if data.values.bind.tsig.secret:
  #@   data.values.bind.tsig.secret!="REPLACE_ME" or assert.fail("values.bind.tsig.secret can not be empty or REPLACE_ME")
  #@ else:
  #@   assert.fail("values.bind.tsig.secret can not be empty or REPLACE_ME")
  #@ end

#@ end

#@ if data.values.provider=="azure":

#@ end